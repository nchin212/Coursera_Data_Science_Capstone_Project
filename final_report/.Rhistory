# Load functions from other file
source('./shiny/functions.R')
# Load functions from other file
source('../shiny/functions.R')
# Input text sample
inputText <- 'who is'
# Get inputs as separate strings
input1 = fun.input(inputText)[1, ]
input2 = fun.input(inputText)[2, ]
input1
input2
# Predict
n_suggestions <- 5
fun.predict(input1, input2)
# Load functions from other file
source('../shiny/functions.R')
source('../data_cleaning/data_cleaning.R')
# Input text sample
inputText <- 'who is'
# Get inputs as separate strings
input1 = fun.input(inputText)[1, ]
input2 = fun.input(inputText)[2, ]
input1
input2
# Predict
n_suggestions <- 5
fun.predict(input1, input2)
word <- ""
# Load in functions from other file
source('../shiny/functions.R')
# Load in libraries
library(caTools)
library(tidyr)
# Load in datasets
blogs <- readLines('../data/en_US/en_US.blogs.txt')
news <- readLines('../data/en_US/en_US.news.txt')
twitter <- readLines('../data/en_US/en_US.twitter.txt',skipNul = TRUE)
combined <- c(blogs, news, twitter)
# Sample the data
set.seed(101)
n <- 1/100
combined_sample <- sample(combined, length(combined) * n)
# Split into train and validation sets
split <- sample.split(combined_sample, 0.8)
train <- subset(combined_sample, split == T)
valid <- subset(combined_sample, split == F)
# Create quanteda corpus and reshape it into sentences
train <- fun.corpus(train)
# Tokenize
train1 <- fun.tokenize(train)
train1[1]
train1[2]
train1
# Load libraries
library(dplyr)
input2 <- y[length(y)]
accuracy_2prev_3pred <- round(fun.accuracy(valid3), precision)
# Load functions in other files
source("../data_cleaning/data_cleaning.r")
source('../shiny/functions.R')
set.seed(101)
n <- 1/1000
valid_sample <- sample(valid, length(valid) * n)
# Create a quanteda corpus and reshape into sentences
valid_sample <- fun.corpus(valid_sample)
# Get 2-gram tokens
valid2 <- fun.tokenize(valid_sample, 2)
valid2 <- data_frame(ngrams = valid2) %>%
separate(ngrams, c('input2', 'nextword'), ' ')
# Put empty string as input1
valid2 <- mutate(valid2, input1 = rep("", nrow(valid2))) %>%
select(input1, input2, nextword)
# Get 3-gram tokens
valid3 <- fun.tokenize(valid_sample, 3)
valid3 <- data_frame(ngrams = valid3) %>%
separate(ngrams, c('input1', 'input2', 'nextword'), ' ')
# Create a accuracy function, where accuracy means percentage of cases where
# correct word is predicted within defined number of suggested words
fun.accuracy <- function(x) {
# Apply prediction function to each input line
y <- mapply(fun.predict, x$input1, x$input2)
# Calculate accuracy
accuracy <- sum(ifelse(x$nextword %in% unlist(y), 1, 0)) / nrow(x)
# Return accuracy
return(accuracy)
}
# Rounding precision
precision <- 2
# Accuracy using 1 previous word and 5 predictions
number_pred <- 5
accuracy_1prev_5pred <- round(fun.accuracy(valid2), precision)
# Accuracy using 1 previous word and 3 predictions
number_pred  = 3
accuracy_1prev_3pred <- round(fun.accuracy(valid2), precision)
# Accuracy using 1 previous word and 1 prediction
number_pred  = 1
accuracy_1prev_1pred <- round(fun.accuracy(valid2), precision)
# Accuracy using 2 previous words and 5 predictions
number_pred  = 5
accuracy_2prev_5pred <- round(fun.accuracy(valid3), precision)
# Accuracy using 2 previous words and 3 predictions
number_pred  = 3
accuracy_2prev_3pred <- round(fun.accuracy(valid3), precision)
# Accuracy using 2 previous words and 1 prediction
number_pred  = 1
accuracy_2prev_1pred <- round(fun.accuracy(valid3), precision)
# Accuracy table
accuracy_table <- data.frame(Suggest5 = c(accuracy_2prev_5pred, accuracy_1prev_5pred),
Suggest3 = c(accuracy_2prev_3pred, accuracy_1prev_3pred),
Suggest1 = c(accuracy_2prev_1pred, accuracy_1prev_1pred),
row.names = c('Previous2', 'Previous1')
)
print(accuracy_table)
shiny::runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
# Load functions from other file
source('../shiny/functions.R')
source('../data_cleaning/data_cleaning.R')
# Input text sample
inputText <- ''
# Get inputs as separate strings
input1 = fun.input(inputText)[1, ]
input2 = fun.input(inputText)[2, ]
input1
input2
# Predict
n_suggestions <- 5
fun.predict(input1, input2)
# Load functions from other file
source('../shiny/functions.R')
# Input text sample
inputText <- ''
# Get inputs as separate strings
input1 = fun.input(inputText)[1, ]
input2 = fun.input(inputText)[2, ]
input1
input2
# Predict
n_suggestions <- 5
fun.predict(input1, input2)
# Input text sample
inputText <- ''
# Get inputs as separate strings
input1 = fun.input(inputText)[1, ]
input2 = fun.input(inputText)[2, ]
input1
input2
# Predict
number_pred <- 5
fun.predict(input1, input2)
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
runApp('~/Desktop/Coursera_Data_Science_Capstone_Project/shiny')
